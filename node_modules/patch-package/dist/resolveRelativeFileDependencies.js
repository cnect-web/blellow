"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var path_1 = require("./path");
function resolveRelativeFileDependenciesInPackageJson(appRootPath, pkg) {
    _resolveRelativeFileDependencies(appRootPath, pkg.dependencies);
    _resolveRelativeFileDependencies(appRootPath, pkg.devDependencies);
    return pkg;
}
exports.resolveRelativeFileDependenciesInPackageJson = resolveRelativeFileDependenciesInPackageJson;
function resolveRelativeFileDependenciesInPackageLock(appRootPath, pkg) {
    for (var _i = 0, _a = Object.keys(pkg.dependencies); _i < _a.length; _i++) {
        var packageName = _a[_i];
        pkg.dependencies[packageName].version = transformVersionString(pkg.dependencies[packageName].version, appRootPath);
    }
    return pkg;
}
exports.resolveRelativeFileDependenciesInPackageLock = resolveRelativeFileDependenciesInPackageLock;
function transformVersionString(version, appRootPath) {
    if (version.startsWith("file:") && version[5] !== "/") {
        return "file:" + path_1.resolve(appRootPath, version.slice(5));
    }
    else {
        return version;
    }
}
function _resolveRelativeFileDependencies(appRootPath, dependencies) {
    if (dependencies) {
        for (var _i = 0, _a = Object.keys(dependencies); _i < _a.length; _i++) {
            var packageName = _a[_i];
            dependencies[packageName] = transformVersionString(dependencies[packageName], appRootPath);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb2x2ZVJlbGF0aXZlRmlsZURlcGVuZGVuY2llcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9yZXNvbHZlUmVsYXRpdmVGaWxlRGVwZW5kZW5jaWVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQWdDO0FBbUJoQyxzREFFRSxXQUFtQixFQUFFLEdBQU07SUFDM0IsZ0NBQWdDLENBQUMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQTtJQUMvRCxnQ0FBZ0MsQ0FBQyxXQUFXLEVBQUUsR0FBRyxDQUFDLGVBQWUsQ0FBQyxDQUFBO0lBQ2xFLE1BQU0sQ0FBQyxHQUFHLENBQUE7QUFDWixDQUFDO0FBTkQsb0dBTUM7QUFFRCxzREFFRSxXQUFtQixFQUFFLEdBQU07SUFDM0IsR0FBRyxDQUFDLENBQXNCLFVBQTZCLEVBQTdCLEtBQUEsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLEVBQTdCLGNBQTZCLEVBQTdCLElBQTZCO1FBQWxELElBQU0sV0FBVyxTQUFBO1FBQ3BCLEdBQUcsQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLENBQUMsT0FBTyxHQUFHLHNCQUFzQixDQUM1RCxHQUFHLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxDQUFDLE9BQU8sRUFDckMsV0FBVyxDQUNaLENBQUE7S0FDRjtJQUNELE1BQU0sQ0FBQyxHQUFHLENBQUE7QUFDWixDQUFDO0FBVkQsb0dBVUM7QUFFRCxnQ0FBZ0MsT0FBZSxFQUFFLFdBQW1CO0lBQ2xFLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDdEQsTUFBTSxDQUFDLE9BQU8sR0FBRyxjQUFPLENBQUMsV0FBVyxFQUFFLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtJQUN6RCxDQUFDO0lBQUMsSUFBSSxDQUFDLENBQUM7UUFDTixNQUFNLENBQUMsT0FBTyxDQUFBO0lBQ2hCLENBQUM7QUFDSCxDQUFDO0FBRUQsMENBQ0UsV0FBbUIsRUFDbkIsWUFBZ0Q7SUFFaEQsRUFBRSxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztRQUNqQixHQUFHLENBQUMsQ0FBc0IsVUFBeUIsRUFBekIsS0FBQSxNQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUF6QixjQUF5QixFQUF6QixJQUF5QjtZQUE5QyxJQUFNLFdBQVcsU0FBQTtZQUNwQixZQUFZLENBQUMsV0FBVyxDQUFDLEdBQUcsc0JBQXNCLENBQ2hELFlBQVksQ0FBQyxXQUFXLENBQUMsRUFDekIsV0FBVyxDQUNaLENBQUE7U0FDRjtJQUNILENBQUM7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVzb2x2ZSB9IGZyb20gXCIuL3BhdGhcIlxuXG5pbnRlcmZhY2UgUGFja2FnZUpzb24ge1xuICBkZXBlbmRlbmNpZXM/OiB7XG4gICAgW3BhY2thZ2VOYW1lOiBzdHJpbmddOiBzdHJpbmdcbiAgfVxuICBkZXZEZXBlbmRlbmNpZXM/OiB7XG4gICAgW3BhY2thZ2VOYW1lOiBzdHJpbmddOiBzdHJpbmdcbiAgfVxufVxuXG5pbnRlcmZhY2UgUGFja2FnZUxvY2sge1xuICBkZXBlbmRlbmNpZXM6IHtcbiAgICBbcGFja2FnZU5hbWU6IHN0cmluZ106IHtcbiAgICAgIHZlcnNpb246IHN0cmluZ1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZVJlbGF0aXZlRmlsZURlcGVuZGVuY2llc0luUGFja2FnZUpzb248XG4gIFQgZXh0ZW5kcyBQYWNrYWdlSnNvblxuPihhcHBSb290UGF0aDogc3RyaW5nLCBwa2c6IFQpOiBQYWNrYWdlSnNvbiB7XG4gIF9yZXNvbHZlUmVsYXRpdmVGaWxlRGVwZW5kZW5jaWVzKGFwcFJvb3RQYXRoLCBwa2cuZGVwZW5kZW5jaWVzKVxuICBfcmVzb2x2ZVJlbGF0aXZlRmlsZURlcGVuZGVuY2llcyhhcHBSb290UGF0aCwgcGtnLmRldkRlcGVuZGVuY2llcylcbiAgcmV0dXJuIHBrZ1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZVJlbGF0aXZlRmlsZURlcGVuZGVuY2llc0luUGFja2FnZUxvY2s8XG4gIFQgZXh0ZW5kcyBQYWNrYWdlTG9ja1xuPihhcHBSb290UGF0aDogc3RyaW5nLCBwa2c6IFQpOiBQYWNrYWdlTG9jayB7XG4gIGZvciAoY29uc3QgcGFja2FnZU5hbWUgb2YgT2JqZWN0LmtleXMocGtnLmRlcGVuZGVuY2llcykpIHtcbiAgICBwa2cuZGVwZW5kZW5jaWVzW3BhY2thZ2VOYW1lXS52ZXJzaW9uID0gdHJhbnNmb3JtVmVyc2lvblN0cmluZyhcbiAgICAgIHBrZy5kZXBlbmRlbmNpZXNbcGFja2FnZU5hbWVdLnZlcnNpb24sXG4gICAgICBhcHBSb290UGF0aCxcbiAgICApXG4gIH1cbiAgcmV0dXJuIHBrZ1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm1WZXJzaW9uU3RyaW5nKHZlcnNpb246IHN0cmluZywgYXBwUm9vdFBhdGg6IHN0cmluZykge1xuICBpZiAodmVyc2lvbi5zdGFydHNXaXRoKFwiZmlsZTpcIikgJiYgdmVyc2lvbls1XSAhPT0gXCIvXCIpIHtcbiAgICByZXR1cm4gXCJmaWxlOlwiICsgcmVzb2x2ZShhcHBSb290UGF0aCwgdmVyc2lvbi5zbGljZSg1KSlcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gdmVyc2lvblxuICB9XG59XG5cbmZ1bmN0aW9uIF9yZXNvbHZlUmVsYXRpdmVGaWxlRGVwZW5kZW5jaWVzKFxuICBhcHBSb290UGF0aDogc3RyaW5nLFxuICBkZXBlbmRlbmNpZXM/OiB7IFtwYWNrYWdlTmFtZTogc3RyaW5nXTogc3RyaW5nIH0sXG4pIHtcbiAgaWYgKGRlcGVuZGVuY2llcykge1xuICAgIGZvciAoY29uc3QgcGFja2FnZU5hbWUgb2YgT2JqZWN0LmtleXMoZGVwZW5kZW5jaWVzKSkge1xuICAgICAgZGVwZW5kZW5jaWVzW3BhY2thZ2VOYW1lXSA9IHRyYW5zZm9ybVZlcnNpb25TdHJpbmcoXG4gICAgICAgIGRlcGVuZGVuY2llc1twYWNrYWdlTmFtZV0sXG4gICAgICAgIGFwcFJvb3RQYXRoLFxuICAgICAgKVxuICAgIH1cbiAgfVxufVxuIl19