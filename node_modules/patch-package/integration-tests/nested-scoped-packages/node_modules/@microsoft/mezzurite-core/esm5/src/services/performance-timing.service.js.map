{"version":3,"file":"performance-timing.service.js","sourceRoot":"","sources":["../../../src/services/performance-timing.service.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { MezzuriteConstants } from '../utils/performance-constants';\r\nimport { MezzuriteUtils } from './performance-utils.service';\r\nimport { MezzuriteMeasure } from '../utils/performance-measure';\r\n\r\n/**\r\n * Class containing core timing functions\r\n */\r\nexport class PerformanceTimingService {\r\n    /**\r\n     * Creates measure object from given set of performance marks\r\n     * @param name full semicolon delimited name\r\n     * @param slowestResource Slowest resource inside component\r\n     * @param maxComponentEndTime Max component end time (if VLT)\r\n     */\r\n    static measure(name: string, slowestResource: any = null, maxComponentEndTime: any = null): void {\r\n        let startEntry;\r\n        let endEntry;\r\n\r\n        const componentTitle = MezzuriteUtils.getFullNamePart(name, MezzuriteConstants.fullNamePartTitle);\r\n\r\n        const key = MezzuriteUtils.getFullNamePart(name, MezzuriteConstants.fullNamePartKey);\r\n        if (name === undefined) {\r\n            return;\r\n        }\r\n        if (componentTitle === MezzuriteConstants.altName) {\r\n            // ALT\r\n            endEntry = performance.getEntriesByName(MezzuriteConstants.altMarkEnd)[0];\r\n        } else if (componentTitle === MezzuriteConstants.vltName) {\r\n            // VLT\r\n            startEntry = performance.getEntriesByName(MezzuriteConstants.vltMarkStart)[0];\r\n            endEntry = {\r\n                startTime: maxComponentEndTime\r\n            };\r\n        } else {\r\n            // Component\r\n            startEntry = performance.getEntriesByName(key + MezzuriteConstants.componentMarkStart)[0];\r\n            endEntry = performance.getEntriesByName(key + MezzuriteConstants.componentMarkEnd)[0];\r\n        }\r\n        // start time inside render hook\r\n        const renderStartEntry = performance.getEntriesByName(key + MezzuriteConstants.componentMarkRenderStart)[0];\r\n        const startTime = startEntry !== undefined ? startEntry.startTime : 0;\r\n        let endTime: number = endEntry.startTime;\r\n\r\n        // reset end time to end of slowest resource if\r\n        if (slowestResource !== null && slowestResource.responseEnd > endTime) {\r\n            endTime = slowestResource.responseEnd;\r\n        }\r\n\r\n        const mountDuration = endEntry.startTime - startTime;\r\n        const totalDuration = endTime - startTime;\r\n        const nameArr = name.split(';');\r\n\r\n        const obj = new MezzuriteMeasure();\r\n        obj.name = nameArr[1];\r\n        obj.id = nameArr[2];\r\n        obj.startTime = startTime % 1 !== 0 ? parseFloat(startTime.toFixed(1)) : startTime;\r\n        obj.endTime = parseFloat(endTime.toFixed(1));\r\n        obj.untilMount = parseFloat(mountDuration.toFixed(1));\r\n        obj.clt = parseFloat(totalDuration.toFixed(1));\r\n        obj.slowResource = {};\r\n\r\n        if (slowestResource && slowestResource.responseEnd >= startTime) {\r\n            (<any>obj).slowResource['endTime'] = parseFloat(slowestResource.responseEnd.toFixed(1));\r\n            (<any>obj).slowResource['name'] = slowestResource.name;\r\n        } else if (slowestResource !== null) {\r\n            (<any>obj).slowResource['endTime'] = -1;\r\n            (<any>obj).slowResource['name'] = slowestResource.name;\r\n        }\r\n\r\n        if (componentTitle !== MezzuriteConstants.altName && componentTitle !== MezzuriteConstants.vltName && renderStartEntry) {\r\n            (<any>obj)['renderStartTime'] = renderStartEntry.startTime;\r\n        }\r\n\r\n        (<any>window).mezzurite.measures.push(obj);\r\n    }\r\n\r\n    /**\r\n     * Gets measures by name\r\n     * @param name name\r\n     */\r\n    static getMeasuresByName(name: string) {\r\n        const result: any[] = [];\r\n        if (name === undefined || name === null) {\r\n            return null;\r\n        }\r\n        const measures = (<any>window).mezzurite.measures;\r\n        for (let i = 0; i < measures.length; i++) {\r\n            if (name === measures[i].name) {\r\n                result.push(measures[i]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n        /**\r\n     * Gets a specific measure by id\r\n     * @param id id\r\n     */\r\n    static getMeasureById(id: number) {\r\n        if (id === undefined || id === null) {\r\n            return null;\r\n        }\r\n        const measures = (<any>window).mezzurite.measures;\r\n        for (let i = 0; i < measures.length; i++) {\r\n            if (id === measures[i].id) {\r\n                return measures[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n            /**\r\n     * Gets a specific measure by name and id\r\n     * @param name name\r\n     * @param id id\r\n     */\r\n    static getMeasureByNameAndId(name: string, id: number) {\r\n        if (name === undefined || name === null || id === undefined || id === null) {\r\n            return null;\r\n        }\r\n        const measures = (<any>window).mezzurite.measures;\r\n        for (let i = 0; i < measures.length; i++) {\r\n            if (name === measures[i].name && id === measures[i].id) {\r\n                return measures[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Gets current components from a given capture cycle\r\n     */\r\n    static getCurrentComponents() {\r\n        const components = (<any>window).mezzurite.measures.filter((m: any) =>\r\n            m.name.indexOf(MezzuriteConstants.measureNamePrefix + ';' + MezzuriteConstants.altName) === -1 &&\r\n            m.name.indexOf(MezzuriteConstants.measureNamePrefix + ';' + MezzuriteConstants.vltName) === -1 &&\r\n            m.startTime >= (<any>window).mezzurite.startTime &&\r\n            m.startTime <= (<any>window).mezzurite.endTime\r\n        );\r\n        return components;\r\n    }\r\n\r\n    /**\r\n     * Gets lookup object of current components\r\n     */\r\n    static getCurrentComponentsLookup() {\r\n        const components = (<any>window).mezzurite.measures.filter((m: any) =>\r\n            m.name.indexOf(MezzuriteConstants.measureNamePrefix + ';' + MezzuriteConstants.altName) === -1 &&\r\n            m.name.indexOf(MezzuriteConstants.measureNamePrefix + ';' + MezzuriteConstants.vltName) === -1 &&\r\n            m.startTime >= (<any>window).mezzurite.startTime &&\r\n            m.startTime <= (<any>window).mezzurite.endTime\r\n        );\r\n        const obj: any = {};\r\n        for (let i = 0; i < components.length; i++) {\r\n            obj[MezzuriteConstants.measureNamePrefix + ';' + components[i].name + ';' + components[i].id] = components[i];\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Calculates viewport load time\r\n     */\r\n    static calculateVlt() {\r\n        let maxComponent = null;\r\n        let maxEndTime = 0;\r\n        const vltComponents: any[] = [];\r\n        const components: any = this.getCurrentComponentsLookup();\r\n        const vltLookup = (<any>window).mezzurite.vltComponentLookup;\r\n        let measure;\r\n        for (const key in vltLookup) {\r\n            if (components[key] && vltLookup[key] === true) {\r\n                vltComponents.push(components[key]);\r\n                if (maxComponent !== null) {\r\n                    let slowestResourceEnd = 0;\r\n                    const slowestResource = (<any>window).mezzurite.slowestResource[key];\r\n                    if (slowestResource !== undefined && slowestResource !== null) {\r\n                        slowestResourceEnd = slowestResource.responseEnd;\r\n                    }\r\n                    const maxLast = maxComponent.clt + maxComponent.startTime;\r\n                    const currLast = components[key].clt + components[key].startTime;\r\n                    if (currLast > maxLast) {\r\n                        maxComponent = components[key];\r\n                        maxEndTime = currLast;\r\n                    }\r\n                } else {\r\n                    maxComponent = components[key];\r\n                }\r\n            }\r\n        }\r\n        if (maxComponent !== null) {\r\n            const fullName = MezzuriteConstants.measureNamePrefix + ';' + MezzuriteConstants.vltName + ';' + maxComponent.id;\r\n            this.measure(fullName, null, maxComponent.endTime);\r\n            measure = this.getMeasureByNameAndId(MezzuriteConstants.vltName, maxComponent.id);\r\n            performance.clearMarks(MezzuriteConstants.vltMarkStart);\r\n        } else {\r\n            return null;\r\n            // no components in view\r\n        }\r\n        return {\r\n            vlt: measure.clt,\r\n            components: vltComponents\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Creates sub-element lookup object on global mezzurite object\r\n     * @param el\r\n     * @param key\r\n     */\r\n    static getElNames(el: any, key: string) {\r\n        if ((<any>window).mezzurite.childElementNames[key] === undefined) {\r\n            (<any>window).mezzurite.childElementNames[key] = [];\r\n        }\r\n        if (el.tagName === 'IMG') {\r\n            (<any>window).mezzurite.childElementNames[key].push(el.src);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculates slowest resource within a given component element\r\n     * @param el parent element\r\n     * @param fullName component fullname\r\n     */\r\n    static calculateSlowestResource(el: any, fullName: string) {\r\n        const key = MezzuriteUtils.getFullNamePart(fullName, MezzuriteConstants.fullNamePartKey);\r\n        let slowestResource = null;\r\n        MezzuriteUtils.walkDOM(el, key, this.getElNames);\r\n\r\n        const resources: any = performance.getEntriesByType('resource').filter((r: any) => (<any>r).initiatorType === 'img');\r\n        const currentResources = (<any>window).mezzurite.childElementNames[key];\r\n        if (resources.length === 0) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < currentResources.length; i++) {\r\n            for (let j = 0; j < resources.length; j++) {\r\n                if (currentResources[i] === resources[j].name &&\r\n                   (slowestResource === null || resources[j].responseEnd > slowestResource.responseEnd)) {\r\n                        slowestResource = resources[j];\r\n                }\r\n            }\r\n        }\r\n        (<any>window).mezzurite.slowestResource[fullName] = slowestResource;\r\n        return slowestResource;\r\n    }\r\n\r\n    static calculateSlowestResourceBatch() {\r\n        let slow;\r\n        const elementDict = (<any>window).mezzurite.elementLookup;\r\n        for (const prop in elementDict) {\r\n            slow = this.calculateSlowestResource(elementDict[prop], prop);\r\n            if (slow === null) {\r\n                PerformanceTimingService.measure(prop);\r\n            } else {\r\n                PerformanceTimingService.measure(prop, slow);\r\n            }\r\n        }\r\n    }\r\n}"]}