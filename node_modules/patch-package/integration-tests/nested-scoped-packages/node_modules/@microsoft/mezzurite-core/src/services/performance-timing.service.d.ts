/**
 * Class containing core timing functions
 */
export declare class PerformanceTimingService {
    /**
     * Creates measure object from given set of performance marks
     * @param name full semicolon delimited name
     * @param slowestResource Slowest resource inside component
     * @param maxComponentEndTime Max component end time (if VLT)
     */
    static measure(name: string, slowestResource?: any, maxComponentEndTime?: any): void;
    /**
     * Gets measures by name
     * @param name name
     */
    static getMeasuresByName(name: string): any[] | null;
    /**
 * Gets a specific measure by id
 * @param id id
 */
    static getMeasureById(id: number): any;
    /**
* Gets a specific measure by name and id
* @param name name
* @param id id
*/
    static getMeasureByNameAndId(name: string, id: number): any;
    /**
     * Gets current components from a given capture cycle
     */
    static getCurrentComponents(): any;
    /**
     * Gets lookup object of current components
     */
    static getCurrentComponentsLookup(): any;
    /**
     * Calculates viewport load time
     */
    static calculateVlt(): {
        vlt: any;
        components: any[];
    } | null;
    /**
     * Creates sub-element lookup object on global mezzurite object
     * @param el
     * @param key
     */
    static getElNames(el: any, key: string): void;
    /**
     * Calculates slowest resource within a given component element
     * @param el parent element
     * @param fullName component fullname
     */
    static calculateSlowestResource(el: any, fullName: string): any;
    static calculateSlowestResourceBatch(): void;
}
