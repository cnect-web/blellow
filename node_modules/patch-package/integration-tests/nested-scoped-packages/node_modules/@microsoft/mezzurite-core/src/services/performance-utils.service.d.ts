/**
 * Class of utility functions for Mezzurite
 */
export declare class MezzuriteUtils {
    constructor();
    /**
     * Adds default values for MezzuriteObject to the global window.mezzurite object
     * @param obj existing mezzurite global object (if already created by logger)
     */
    static createMezzuriteObject(obj: any): void;
    /**
     * Resets certain properties in window.mezzurite after capture cycle is completed
     */
    static testReset(): void;
    /**
     * Creates a unique alpha-numeric key
     */
    static makeId(): string;
    /**
     * Gets string name of the given function
     * @param fun function
     */
    static getFunctionName(fun: any): string;
    /**
     * Gets name of a given component passed into Mezzurite HOC
     * @param WrappedComponent Component
     */
    static getDisplayName(WrappedComponent: any): any;
    /**
     * Gets complete name consisting of prefix, component name, and unique key.
     * @param name component name
     * @param key unique key
     * @param clarifier optional clarifier
     */
    static getName(name: string, key: string): string;
    /**
     * Creates metric to save to global mezzurite object
     * @param metricType metric type
     * @param value measured value
     * @param data json metadata
     */
    static createMetric(metricType: string, value: number, data?: any): any;
    /**
     * Walks DOM of a given element
     * @param node DOM node
     * @param key unique identifier
     * @param func callback function
     */
    static walkDOM(node: any, key: string, func: any): void;
    /**
     * Gets fragment from full name
     * @param fullName full name
     * @param val value to pull
     */
    static getFullNamePart(fullName: string, val: string): string;
    /**
     * Polyfill that adds CustomEvent for IE usage
     */
    static addCustomEventPolyfill(): false | undefined;
}
