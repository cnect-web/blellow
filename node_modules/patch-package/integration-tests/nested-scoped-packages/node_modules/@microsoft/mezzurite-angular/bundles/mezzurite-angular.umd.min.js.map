{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","../../node_modules/intersection-observer/intersection-observer.js","../package/src/services/angular-environment.ts","../package/src/services/angular-performance-utils.service.ts","../package/src/services/angular-routing.service.ts","../package/src/components/angular-performance.directive.ts","../package/src/modules/angular-performance.module.ts"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","setPrototypeOf","__proto__","Array","p","hasOwnProperty","window","document","IntersectionObserverEntry","entry","time","target","rootBounds","boundingClientRect","intersectionRect","top","bottom","left","right","width","height","isIntersecting","targetRect","targetArea","intersectionArea","intersectionRatio","Number","toFixed","IntersectionObserver","callback","opt_options","options","Error","root","nodeType","_checkForIntersections","throttle","bind","THROTTLE_TIMEOUT","_callback","_observationTargets","_queuedEntries","_rootMarginValues","_parseRootMargin","rootMargin","thresholds","_initThresholds","threshold","map","margin","value","unit","join","now","performance","fn","timeout","timer","setTimeout","addEvent","node","event","opt_useCapture","addEventListener","attachEvent","removeEvent","removeEventListener","detatchEvent","computeRectIntersection","rect1","rect2","Math","max","min","getBoundingClientRect","el","rect","err","containsDeep","parent","child","getParentNode","parentNode","host","defineProperty","get","POLL_INTERVAL","USE_MUTATION_OBSERVER","observe","some","item","element","_registerInstance","push","_monitorIntersections","unobserve","filter","length","_unmonitorIntersections","_unregisterInstance","disconnect","takeRecords","records","slice","opt_threshold","isArray","sort","t","i","a","isNaN","opt_rootMargin","margins","split","parts","exec","parseFloat","_monitoringIntersections","_monitoringInterval","setInterval","_domObserver","MutationObserver","attributes","childList","characterData","subtree","clearInterval","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","forEach","rootContainsTarget","_rootContainsTarget","oldEntry","_computeTargetAndRootIntersection","newEntry","_hasCrossedThreshold","getComputedStyle","display","atRoot","parentRect","parentComputedStyle","body","documentElement","overflow","html","clientWidth","clientHeight","_expandRectByRootMargin","newRect","oldRatio","newRatio","environment","version","require","name","MezzuriteAngularUtils","_super","tslib_1.__extends","createMezzuriteObject","obj","call","mezzurite","packageVersion","packageName","MezzuriteUtils","RoutingService","router","routerPerf","start","_this","events","pipe","NavigationStart","subscribe","e","handleRoute","routeUrl","url","captureCycleStarted","PerformanceTelemetryService","captureTimings","mark","MezzuriteConstants","vltMarkStart","startCaptureCycle","firstViewLoaded","altMarkEnd","fullName","getName","altName","makeId","PerformanceTimingService","measure","Injectable","Router","MezzuriteDirective","ref","id","componentMarkStart","nativeElement","ngOnInit","title","elementLookup","that","config","entries","observer","componentMarkEnd","viewportWidth","viewportHeight","vltComponentLookup","Directive","args","selector","ElementRef","Input","AngularPerfModule","forRoot","ngModule","providers","NgModule","declarations","exports"],"mappings":"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","file":"mezzurite-angular.umd.min.js.map","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n'use strict';\n\n\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = entry.rootBounds;\n  this.boundingClientRect = entry.boundingClientRect;\n  this.intersectionRect = entry.intersectionRect || getEmptyRect();\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections();\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n\n    return item.element != target;\n  });\n  if (!this._observationTargets.length) {\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function() {\n  if (!this._monitoringIntersections) {\n    this._monitoringIntersections = true;\n\n    // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n    if (this.POLL_INTERVAL) {\n      this._monitoringInterval = setInterval(\n          this._checkForIntersections, this.POLL_INTERVAL);\n    }\n    else {\n      addEvent(window, 'resize', this._checkForIntersections, true);\n      addEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n        this._domObserver = new MutationObserver(this._checkForIntersections);\n        this._domObserver.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function() {\n  if (this._monitoringIntersections) {\n    this._monitoringIntersections = false;\n\n    clearInterval(this._monitoringInterval);\n    this._monitoringInterval = null;\n\n    removeEvent(window, 'resize', this._checkForIntersections, true);\n    removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n    if (this._domObserver) {\n      this._domObserver.disconnect();\n      this._domObserver = null;\n    }\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, rootRect) {\n\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var targetRect = getBoundingClientRect(target);\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return;\n\n    if (parent == this.root || parent == document) {\n      atRoot = true;\n      parentRect = rootRect;\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      if (parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n      if (!intersectionRect) break;\n    }\n    parent = getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {Object} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {Object} rect The rect object to expand.\n * @return {Object} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object} The intersection rect or undefined if no intersection\n *     is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {Object} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {Object} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}(window, document));\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/**\r\n * Gets information from package.json\r\n */\r\nconst environment = {\r\n    version: require('../package.json').version,\r\n    name: require('../package.json').name\r\n};\r\n\r\nexport { environment };","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { MezzuriteUtils } from '@microsoft/mezzurite-core';\r\nimport {environment} from './angular-environment';\r\n\r\n/**\r\n * Extension of Mezzurite Utilities that gets package specific information\r\n */\r\nexport class MezzuriteAngularUtils extends MezzuriteUtils {\r\n    static createMezzuriteObject(obj: any) {\r\n        super.createMezzuriteObject(obj);\r\n        (<any>window).mezzurite.packageVersion = environment.version;\r\n        (<any>window).mezzurite.packageName = environment.name;\r\n    }\r\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { filter } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { PerformanceTimingService, PerformanceTelemetryService, MezzuriteConstants} from '@microsoft/mezzurite-core';\r\nimport { MezzuriteAngularUtils } from './angular-performance-utils.service';\r\n\r\n\r\n/**\r\n * RoutingService is responsible for listening to the routing events coming\r\n * into the application and creating performance marks based on them.\r\n */\r\n@Injectable()\r\nexport class RoutingService {\r\n    endCounter = 0;\r\n\r\n    constructor(private router: Router) {\r\n            if (!(<any>window).mezzurite) {\r\n                (<any>window).mezzurite = {};\r\n            }\r\n            MezzuriteAngularUtils.createMezzuriteObject((<any>window).mezzurite);\r\n            (<any>window).mezzurite.routerPerf = true;\r\n        }\r\n\r\n    /**\r\n     * this method begins the listening process. Must be called for code to function properly.\r\n     */\r\n    start(): void {\r\n        const onNavStart$ = (<any>this).router.events.pipe(filter(event => event instanceof NavigationStart));\r\n\r\n\r\n        onNavStart$.subscribe((e: any) => {\r\n           this.handleRoute(e);\r\n        });\r\n    }\r\n\r\n    handleRoute(e: any){\r\n        (<any>window).mezzurite.routeUrl= e.url;\r\n        if ((<any>window).mezzurite.captureCycleStarted){\r\n\r\n            (<any>window).mezzurite.captureCycleStarted = false;\r\n            PerformanceTelemetryService.captureTimings(true);\r\n            window.performance.mark(MezzuriteConstants.vltMarkStart);\r\n            // starts a new capture cycle\r\n            PerformanceTelemetryService.startCaptureCycle();\r\n        } else {\r\n            // starts the capture cycle to transmit telemetry if current pathname is different than recentPath\r\n            PerformanceTelemetryService.startCaptureCycle();\r\n            // If first load, capture ALT\r\n            if (!(<any>window).mezzurite.firstViewLoaded) {\r\n                window.performance.mark(MezzuriteConstants.altMarkEnd);\r\n                window.performance.mark(MezzuriteConstants.vltMarkStart);\r\n                const fullName = MezzuriteAngularUtils.getName(MezzuriteConstants.altName, MezzuriteAngularUtils.makeId());\r\n                PerformanceTimingService.measure(fullName, 0, MezzuriteConstants.altMarkEnd);\r\n            } else {\r\n                window.performance.mark(MezzuriteConstants.vltMarkStart);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { Directive, OnInit, ElementRef, Input } from '@angular/core';\r\nimport { MezzuriteUtils, MezzuriteConstants } from '@microsoft/mezzurite-core';\r\nimport 'intersection-observer';\r\n\r\n@Directive({\r\n     selector: '[mezzurite]'\r\n})\r\n\r\n/**\r\n * Directive that enables tracking on specific component elements\r\n */\r\nexport class MezzuriteDirective implements OnInit {\r\n\r\n    private id: string;\r\n    private fullName: string;\r\n    private el: HTMLElement;\r\n    // tslint:disable-next-line:no-input-rename\r\n    @Input('component-title') title = 'MyComponent';\r\n\r\n    constructor(ref: ElementRef) {\r\n        this.id = MezzuriteUtils.makeId();\r\n        performance.mark(this.id + MezzuriteConstants.componentMarkStart);\r\n        this.el = ref.nativeElement;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.fullName = MezzuriteUtils.getName(this.title, this.id);\r\n        (<any>window).mezzurite.elementLookup[this.fullName] = this.el;\r\n        const that = this;\r\n        const config = {\r\n            root: null as any, // setting it to 'null' sets it to default value: viewport\r\n            rootMargin: '0px'\r\n        };\r\n\r\n        const intObserver = new IntersectionObserver(function(entries, observer) {\r\n            performance.mark(that.id + MezzuriteConstants.componentMarkEnd);\r\n            const entry = entries[0];\r\n            (<any>window).mezzurite.viewportWidth = entry.rootBounds.width;\r\n            (<any>window).mezzurite.viewportHeight = entry.rootBounds.height;\r\n            if (entry.isIntersecting) {\r\n                (<any>window).mezzurite.vltComponentLookup[that.fullName] = true;\r\n            }\r\n            observer.unobserve(that.el);\r\n        }, config);\r\n            intObserver.observe(this.el);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { MezzuriteDirective } from '../components/angular-performance.directive';\r\nimport { RoutingService } from '../services/angular-routing.service';\r\n\r\n\r\n@NgModule({\r\n    declarations: [MezzuriteDirective],\r\n    exports: [MezzuriteDirective]\r\n})\r\n\r\n/**\r\n * Mezzurite Performance Module for Angular\r\n */\r\nexport class AngularPerfModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: AngularPerfModule,\r\n            providers: [\r\n                RoutingService\r\n                // Add new services here.\r\n            ]\r\n        };\r\n    }\r\n}"]}