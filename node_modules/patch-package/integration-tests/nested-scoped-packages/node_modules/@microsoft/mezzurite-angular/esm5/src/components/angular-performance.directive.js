/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
import { Directive, ElementRef, Input } from '@angular/core';
import { MezzuriteUtils, MezzuriteConstants } from '@microsoft/mezzurite-core';
import 'intersection-observer';
var MezzuriteDirective = /** @class */ (function () {
    function MezzuriteDirective(ref) {
        // tslint:disable-next-line:no-input-rename
        this.title = 'MyComponent';
        this.id = MezzuriteUtils.makeId();
        performance.mark(this.id + MezzuriteConstants.componentMarkStart);
        this.el = ref.nativeElement;
    }
    /**
     * @return {?}
     */
    MezzuriteDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.fullName = MezzuriteUtils.getName(this.title, this.id);
        (/** @type {?} */ (window)).mezzurite.elementLookup[this.fullName] = this.el;
        /** @type {?} */
        var that = this;
        /** @type {?} */
        var config = {
            root: /** @type {?} */ (null),
            // setting it to 'null' sets it to default value: viewport
            rootMargin: '0px'
        };
        /** @type {?} */
        var intObserver = new IntersectionObserver(function (entries, observer) {
            performance.mark(that.id + MezzuriteConstants.componentMarkEnd);
            /** @type {?} */
            var entry = entries[0];
            (/** @type {?} */ (window)).mezzurite.viewportWidth = entry.rootBounds.width;
            (/** @type {?} */ (window)).mezzurite.viewportHeight = entry.rootBounds.height;
            if (entry.isIntersecting) {
                (/** @type {?} */ (window)).mezzurite.vltComponentLookup[that.fullName] = true;
            }
            observer.unobserve(that.el);
        }, config);
        intObserver.observe(this.el);
    };
    MezzuriteDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[mezzurite]'
                },] }
    ];
    /** @nocollapse */
    MezzuriteDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    MezzuriteDirective.propDecorators = {
        title: [{ type: Input, args: ['component-title',] }]
    };
    return MezzuriteDirective;
}());
export { MezzuriteDirective };
if (false) {
    /** @type {?} */
    MezzuriteDirective.prototype.id;
    /** @type {?} */
    MezzuriteDirective.prototype.fullName;
    /** @type {?} */
    MezzuriteDirective.prototype.el;
    /** @type {?} */
    MezzuriteDirective.prototype.title;
}
//# sourceMappingURL=angular-performance.directive.js.map