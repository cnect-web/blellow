/*
 * Aliases
 */
/*
 * Background colors
 *
 * Note: in some cases, components can have other background colors (header-top, file, footer...)
 * These are the main background colors.
 */
/* stylelint-disable  scss/at-extend-no-missing-placeholder */
/* stylelint-disable   selector-no-qualifying-type */
/* In this file we can put overrides to fix ecl styling issues */
.ecl-message, .messages {
  margin: 0 0 1.66rem; }

/* Let tabs wrap on multiple lines  */
.ecl-navigation-list {
  flex-wrap: wrap; }

.ecl-button {
  white-space: nowrap; }

/* Active input border for input doesn't match form border */
.ecl-search-form__textfield-wrapper {
  margin: 0; }

.ecl-link:visited {
  color: #004494; }

.ecl-link--inverted:visited {
  color: #fff; }

.ecl-link.ecl-navigation-list__link--active,
.ecl-link.ecl-navigation-list__link[aria-selected='true'] {
  color: #404040; }

/* Implement messages classes
 *
 * .ecl-message
 * .ecl-message--success
 * .ecl-message--warning
 * .ecl-message--error
 * .ecl-message--live
 */
.messages {
  -webkit-box-align: center;
          align-items: center;
  grid-column-gap: 0.3em;
  grid-template-columns: -webkit-min-content 1fr;
  grid-template-columns: min-content 1fr;
  min-height: calc(36px + 0.66rem); }

.messages--status {
  background-image: url("../images/messages-success.svg");
  border-color: #467a39; }

.messages--warning {
  background-image: url("../images/messages-warning.svg");
  border-color: #fbc11d; }

.messages--error {
  background-image: url("../images/messages-error.svg");
  border-color: #da2130; }

body div.tabledrag-changed-warning {
  margin-bottom: 0.5em; }

.ecl-row {
  margin-bottom: 2.22rem; }
  .ecl-row:last-child {
    margin-bottom: 0; }

/* Breadcrumb: hide the current segment */
.ecl-breadcrumb__segment:nth-last-child(2) *::after {
  display: none; }

.ecl-breadcrumb__segment--last:not(.ecl-breadcrumb__segment--first) {
  display: none; }
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9AZWNsL2dlbmVyaWMtYmFzZS92YXJpYWJsZXMvX2NvbG9ycy5zY3NzIiwiLi4vc2Fzcy9lY2wtZml4ZXMuc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9AZWNsL2dlbmVyaWMtYmFzZS92YXJpYWJsZXMvX3NwYWNpbmcuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyQkE7O0dBRUc7QUFXSDs7Ozs7R0FLRztBQzNDSCw4REFBOEQ7QUFDOUQscURBQXFEO0FBRXJELGlFQUFpRTtBQUVqRTtFQUNFLG9CQ0FVLEVEQ1g7O0FBRUQsc0NBQXNDO0FBRXRDO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBRUQ7RUFDRSxvQkFBbUIsRUFDcEI7O0FBRUQsNkRBQTZEO0FBQzdEO0VBQ0UsVUFBUyxFQUNWOztBQUlEO0VBQ0UsZUR4QmlCLEVDeUJsQjs7QUFJRDtFQUNFLFlBQVcsRUFDWjs7QUFJRDs7RUFFRSxlRDFCaUIsRUMyQmxCOztBQUVEOzs7Ozs7O0dBT0c7QUFFSDtFQUdFLDBCQUFtQjtVQUFuQixvQkFBbUI7RUFDbkIsdUJBQXNCO0VBQ3RCLCtDQUFzQztFQUF0Qyx1Q0FBc0M7RUFDdEMsaUNBQWdDLEVBQ2pDOztBQUVEO0VBQ0Usd0RBQXFFO0VBQ3JFLHNCRDVCeUIsRUM2QjFCOztBQUNEO0VBQ0Usd0RBQXFFO0VBQ3JFLHNCRDFEbUIsRUMyRHBCOztBQUNEO0VBQ0Usc0RBQW1FO0VBQ25FLHNCRG5DdUIsRUNvQ3hCOztBQUVEO0VBQ0UscUJBQW9CLEVBQ3JCOztBQUVEO0VBQ0UsdUJDeEVVLEVENEVYO0VBTEQ7SUFHSSxpQkFBZ0IsRUFDakI7O0FBR0gsMENBQTBDO0FBQzFDO0VBQ0UsY0FBYSxFQUNkOztBQUNEO0VBQ0UsY0FBYSxFQUNkIiwiZmlsZSI6ImVjbC1maXhlcy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBFQ0wgQ29sb3JzXG5cbiRlY2wtY29sb3JzOiAoXG4gIGJsdWUtMTIwOiAjMDEyYjU4LFxuICBibHVlLTExMDogIzAwMzc3NixcbiAgYmx1ZS0xMDA6ICMwMDQ0OTQsXG4gIGJsdWUtNzU6ICM0MDczYWYsXG4gIGJsdWUtNTA6ICM3ZmExYzksXG4gIGJsdWUtMjU6ICNiZmQwZTQsXG4gIGJsdWUtNTogI2YyZjVmOSxcbiAgeWVsbG93LTEyMDogI2Y4YWUyMSxcbiAgeWVsbG93LTExMDogI2ZiYzExZCxcbiAgeWVsbG93LTEwMDogI2ZmZDYxNyxcbiAgeWVsbG93LTc1OiAjZmZkZTM5LFxuICB5ZWxsb3ctNTA6ICNmZmU4NzksXG4gIHllbGxvdy0yNTogI2ZmZjRiYixcbiAgZ3JleS0xMDA6ICM0MDQwNDAsXG4gIGdyZXktNzU6ICM3MDcwNzAsXG4gIGdyZXktNTA6ICM5ZjlmOWYsXG4gIGdyZXktMjU6ICNjZmNmY2YsXG4gIGdyZXktMjA6ICNkOWQ5ZDksXG4gIGdyZXktMTU6ICNlM2UzZTMsXG4gIGdyZXktMTA6ICNlYmViZWIsXG4gIGdyZXktNTogI2Y1ZjVmNSxcbiAgcHVycGxlLTEwMDogIzU1MDc0NSxcbikgIWRlZmF1bHQ7XG5cbi8qXG4gKiBBbGlhc2VzXG4gKi9cblxuJGVjbC1jb2xvci1wcmltYXJ5OiBtYXAtZ2V0KCRlY2wtY29sb3JzLCAnYmx1ZS0xMDAnKSAhZGVmYXVsdDtcbiRlY2wtY29sb3Itc2Vjb25kYXJ5OiBtYXAtZ2V0KCRlY2wtY29sb3JzLCAneWVsbG93LTEwMCcpICFkZWZhdWx0O1xuJGVjbC1jb2xvci1zaGFkZTogbWFwLWdldCgkZWNsLWNvbG9ycywgJ2dyZXktMTAwJykgIWRlZmF1bHQ7XG5cbiRlY2wtY29sb3ItaW5mbzogIzAwNmZiNCAhZGVmYXVsdDtcbiRlY2wtY29sb3Itd2FybmluZzogI2YyOTUyNyAhZGVmYXVsdDtcbiRlY2wtY29sb3Itc3VjY2VzczogIzQ2N2EzOSAhZGVmYXVsdDtcbiRlY2wtY29sb3ItZXJyb3I6ICNkYTIxMzAgIWRlZmF1bHQ7XG5cbi8qXG4gKiBCYWNrZ3JvdW5kIGNvbG9yc1xuICpcbiAqIE5vdGU6IGluIHNvbWUgY2FzZXMsIGNvbXBvbmVudHMgY2FuIGhhdmUgb3RoZXIgYmFja2dyb3VuZCBjb2xvcnMgKGhlYWRlci10b3AsIGZpbGUsIGZvb3Rlci4uLilcbiAqIFRoZXNlIGFyZSB0aGUgbWFpbiBiYWNrZ3JvdW5kIGNvbG9ycy5cbiAqL1xuXG4kZWNsLWNvbG9ycy1iZzogKFxuICBkZWZhdWx0OiAjZmZmLFxuICBwcmltYXJ5OiAkZWNsLWNvbG9yLXByaW1hcnksXG4gIHNlY29uZGFyeTogJGVjbC1jb2xvci1zZWNvbmRhcnksXG4gIHNoYWRlOiAkZWNsLWNvbG9yLXNoYWRlLFxuICBibHVlLTU6IG1hcC1nZXQoJGVjbC1jb2xvcnMsICdibHVlLTUnKSxcbikgIWRlZmF1bHQ7XG4iLCJAaW1wb3J0ICdAZWNsL2VjLWJhc2UvdmFyaWFibGVzL2luZGV4JztcblxuLyogc3R5bGVsaW50LWRpc2FibGUgIHNjc3MvYXQtZXh0ZW5kLW5vLW1pc3NpbmctcGxhY2Vob2xkZXIgKi9cbi8qIHN0eWxlbGludC1kaXNhYmxlICAgc2VsZWN0b3Itbm8tcXVhbGlmeWluZy10eXBlICovXG5cbi8qIEluIHRoaXMgZmlsZSB3ZSBjYW4gcHV0IG92ZXJyaWRlcyB0byBmaXggZWNsIHN0eWxpbmcgaXNzdWVzICovXG5cbi5lY2wtbWVzc2FnZSB7XG4gIG1hcmdpbjogMCAwIG1hcC1nZXQoJGVjbC1zcGFjaW5nLCAnbScpO1xufVxuXG4vKiBMZXQgdGFicyB3cmFwIG9uIG11bHRpcGxlIGxpbmVzICAqL1xuXG4uZWNsLW5hdmlnYXRpb24tbGlzdCB7XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cblxuLmVjbC1idXR0b24ge1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuXG4vKiBBY3RpdmUgaW5wdXQgYm9yZGVyIGZvciBpbnB1dCBkb2Vzbid0IG1hdGNoIGZvcm0gYm9yZGVyICovXG4uZWNsLXNlYXJjaC1mb3JtX190ZXh0ZmllbGQtd3JhcHBlciB7XG4gIG1hcmdpbjogMDtcbn1cblxuLy8gY2hhbmdlIHRoZSBjb2xvciBvZiB0aGUgdmlzaXRlZCBsaW5rXG5cbi5lY2wtbGluazp2aXNpdGVkIHtcbiAgY29sb3I6IG1hcC1nZXQoJGVjbC1jb2xvcnMsICdibHVlLTEwMCcpO1xufVxuXG4vLyBvdmVycmlkZSAnLmVjbC1saW5rOnZpc2l0ZWQnIFxuXG4uZWNsLWxpbmstLWludmVydGVkOnZpc2l0ZWQge1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLy8gb3ZlcnJpZGUgJy5lY2wtbGluazp2aXNpdGVkJyB0byBtYWtlIGFjdGl2ZSBjbGFzcyB3b3JrXG5cbi5lY2wtbGluay5lY2wtbmF2aWdhdGlvbi1saXN0X19saW5rLS1hY3RpdmUsIFxuLmVjbC1saW5rLmVjbC1uYXZpZ2F0aW9uLWxpc3RfX2xpbmtbYXJpYS1zZWxlY3RlZD0ndHJ1ZSddIHtcbiAgY29sb3I6IG1hcC1nZXQoJGVjbC1jb2xvcnMsICdncmV5LTEwMCcpO1xufVxuIFxuLyogSW1wbGVtZW50IG1lc3NhZ2VzIGNsYXNzZXNcbiAqXG4gKiAuZWNsLW1lc3NhZ2VcbiAqIC5lY2wtbWVzc2FnZS0tc3VjY2Vzc1xuICogLmVjbC1tZXNzYWdlLS13YXJuaW5nXG4gKiAuZWNsLW1lc3NhZ2UtLWVycm9yXG4gKiAuZWNsLW1lc3NhZ2UtLWxpdmVcbiAqL1xuXG4ubWVzc2FnZXMge1xuICBAZXh0ZW5kIC5lY2wtbWVzc2FnZTtcblxuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBncmlkLWNvbHVtbi1nYXA6IDAuM2VtO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IG1pbi1jb250ZW50IDFmcjtcbiAgbWluLWhlaWdodDogY2FsYygzNnB4ICsgMC42NnJlbSk7XG59XG5cbi5tZXNzYWdlcy0tc3RhdHVzIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCRlY2wtYXNzZXRzLXBhdGgrJ2ltYWdlcy9tZXNzYWdlcy1zdWNjZXNzLnN2ZycpO1xuICBib3JkZXItY29sb3I6ICRlY2wtY29sb3Itc3VjY2Vzcztcbn1cbi5tZXNzYWdlcy0td2FybmluZyB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgkZWNsLWFzc2V0cy1wYXRoKydpbWFnZXMvbWVzc2FnZXMtd2FybmluZy5zdmcnKTtcbiAgYm9yZGVyLWNvbG9yOiBtYXAtZ2V0KCRlY2wtY29sb3JzLCAneWVsbG93LTExMCcpO1xufVxuLm1lc3NhZ2VzLS1lcnJvciB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgkZWNsLWFzc2V0cy1wYXRoKydpbWFnZXMvbWVzc2FnZXMtZXJyb3Iuc3ZnJyk7XG4gIGJvcmRlci1jb2xvcjogJGVjbC1jb2xvci1lcnJvcjtcbn1cblxuYm9keSBkaXYudGFibGVkcmFnLWNoYW5nZWQtd2FybmluZyB7XG4gIG1hcmdpbi1ib3R0b206IDAuNWVtO1xufVxuXG4uZWNsLXJvdyB7XG4gIG1hcmdpbi1ib3R0b206IG1hcC1nZXQoJGVjbC1zcGFjaW5nLCAnbCcpO1xuICAmOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbn1cblxuLyogQnJlYWRjcnVtYjogaGlkZSB0aGUgY3VycmVudCBzZWdtZW50ICovXG4uZWNsLWJyZWFkY3J1bWJfX3NlZ21lbnQ6bnRoLWxhc3QtY2hpbGQoMikgKjo6YWZ0ZXJ7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uZWNsLWJyZWFkY3J1bWJfX3NlZ21lbnQtLWxhc3Q6bm90KC5lY2wtYnJlYWRjcnVtYl9fc2VnbWVudC0tZmlyc3QpIHtcbiAgZGlzcGxheTogbm9uZTtcbn0iLCIvLyBFQ0wgU3BhY2luZ1xuXG4kZWNsLXNwYWNpbmc6IChcbiAgbm9uZTogMCxcbiAgeHh4czogMC4zM3JlbSxcbiAgeHhzOiAwLjY2cmVtLFxuICB4czogMC44OXJlbSxcbiAgczogMXJlbSxcbiAgbTogMS42NnJlbSxcbiAgbDogMi4yMnJlbSxcbiAgeGw6IDMuMzNyZW0sXG4gIHh4bDogNC40NHJlbVxuKSAhZGVmYXVsdDtcbiJdfQ== */