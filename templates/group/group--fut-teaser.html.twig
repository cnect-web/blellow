{#
/**
 * @file
 * Blellow th implementation to display a group.
 *
 * Available variables:
 * - group: The group entity with limited access to object properties and
 *   methods. Only "getter" methods (method names starting with "get", "has",
 *   or "is") and a few common methods such as "id" and "label" are available.
 *   Calling other methods (such as group.delete) will result in an exception.
 * - label: The title of the group.
 * - content: All group items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the
 *   printing of a given child element.
 * - url: Direct URL of the current group.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - group: The current template type (also known as a "theming hook").
 *   - group--[type]: The current group type. For example, if the group is a
 *     "Classroom" it would result in "group--classroom". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - group--[view_mode]: The View Mode of the group; for example, a
 *     teaser would result in: "group--teaser", and full: "group--full".
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 *
 * @see template_preprocess_group()
 *
 * @ingroup themeable
 */
#}

{%
  set classes = [
    'group-teaser',
    content.fut_logo|render is empty ? 'group-teaser--no-image',
  ]
%}

{%
  set group_privacy = [
    'group-privacy',
    group_is_public ? 'group-privacy--' ~ group_is_public|clean_class,
    group_user_is_member ? 'group-member',
  ]
%}

{% set parent_group_id = parent_group.id[0].value %}
{% set parent_group_label = parent_group.label[0].value %}
{% set parent_group_path = parent_group.path[0].value.alias %}

<article{{ attributes.addClass(classes) }}>
  {% if content.fut_logo|render is empty %}
    <div class="fut_logo bl-field" >
      <a href="{{ base_path }}{{ url }}">
        <div class="img-placeholder"></div>
      </a>
    </div>
  {% endif  %}
  
  {{ content.fut_logo }}

  <div class="group-teaser--header">
    <h3 class="{{ group_privacy|join(' ') }}">
      <a href="{{ url }}">{{ label }}</a>
      {% if group_is_new is not empty %}
        <span class="fut_new">{{ group_is_new }}</span>
      {% endif %}
    </h3>
    
      
    {% if parent_group_id is not empty %}
      <p class="group-parent-group"><span>{% trans %}Part of {% endtrans %}</span> <a href="{{ base_path }}{{ parent_group_path }}" />{{ parent_group_label }}</a></p>
    {% endif %}
  </div>
    
  {{ content.fut_description }}
  {{ content.extra_field_join_group }}

</article>
