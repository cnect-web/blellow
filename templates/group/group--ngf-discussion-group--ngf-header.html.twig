{#
/**
 * @file
 * Default theme implementation to display a group.
 *
 * Available variables:
 * - group: The group entity with limited access to object properties and
 *   methods. Only "getter" methods (method names starting with "get", "has",
 *   or "is") and a few common methods such as "id" and "label" are available.
 *   Calling other methods (such as group.delete) will result in an exception.
 * - label: The title of the group.
 * - content: All group items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the
 *   printing of a given child element.
 * - url: Direct URL of the current group.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - group: The current template type (also known as a "theming hook").
 *   - group--[type]: The current group type. For example, if the group is a
 *     "Classroom" it would result in "group--classroom". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - group--[view_mode]: The View Mode of the group; for example, a
 *     teaser would result in: "group--teaser", and full: "group--full".
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 *
 * @see template_preprocess_group()
 *
 * @ingroup themeable
 */
#}
{% if content.field_ngf_cover_image|render is empty %}
    {% set image_url = file_url(directory ~ '/images/default_group.jpg') %}
{% else %}
    {% set image_url = file_url(content.field_ngf_cover_image|field_target_entity.field_media_image.entity.uri.value|image_style('thumbnail')) %}
{% endif %}

<header class="profile">

  {% set introtext = content.field_ngf_introtext[0]['#context'].value %}

  {# profile header top #}
  {% include '@patterns/profile_header_top/pattern-profileheader-top.html.twig'
    with {
      profile_pic_uri: image_url,
      profile_title: label,
      profile_intro: introtext,
      profile_uri: url,
      profile_uri_back: profile_uri_back,
      profile_uri_more: profile_uri_more
    }
  only %}

  {# profile meta #}

  {% include '@patterns/profile_meta/pattern-profile-meta.html.twig'
    with {
      profile_meta: content.field_ngf_group_visibility[0],
    }
  only %}

  {# profile actions #}
    {#action_contact: 'todo contact',#}
    {#action_contact_uri: 'todo',#}
  {% include '@patterns/profile_actions/pattern-profile-actions.html.twig'
    with {

      action_join: content.join_follow['#items']['group-join']['#title'],
      action_join_uri: content.join_follow['#items']['group-join']['#url'],
      action_leave: content.join_follow['#items']['group-leave']['#title'],
      action_leave_uri: content.join_follow['#items']['group-leave']['#url'],
      action_follow: content.join_follow['#items']['group-follow'],
    }
  only %}

  {# profile networks #}

  {% include "@patterns/profile_networks/pattern-profile-networks.html.twig"
    with {
      profile_members: content.members_followers['#items']['members']['#title'],
      profile_members_uri: content.members_followers['#items']['members']['#url'],
      profile_followers: content.members_followers['#items']['followers']['#title'],
      profile_followers_uri: content.members_followers['#items']['followers']['#url'],
      profile_subgroups: content.members_followers['#items']['subgroups']['#title'],
      profile_subgroups_uri: content.members_followers['#items']['subgroups']['#url'],
    }
  only %}

</header>
